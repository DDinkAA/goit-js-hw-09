{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAuBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAAKC,KAChC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAI,CAAEM,SAAAT,EAAUU,MAAAT,IAEhBG,EAAI,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAEzBA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBb,EAAAe,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAEhEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBb,EAAAe,OAAOG,QAAQ,sBAAoBN,QAAeC,MAAU,G,EAvCrD,CACXM,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAIF,IAAIC,EAAaF,EAAEG,cAAcb,MAAMc,cACvC,MAAMC,EAAYL,EAAEG,cAAcG,KAAKF,cACjCG,EAAiBP,EAAEG,cAAcK,OAAOJ,cAE9C,IAAK,IAAIf,EAAW,EAAGA,GAAYkB,EAAgBlB,GAAY,EAC7DV,EAAcU,EAAUa,GACxBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  // console.log(e.currentTarget);\n\n  let firstDelay = e.currentTarget.delay.valueAsNumber;\n  const delayStep = e.currentTarget.step.valueAsNumber;\n  const promisesAmount = e.currentTarget.amount.valueAsNumber;\n\n  for (let position = 1; position <= promisesAmount; position += 1) {\n    createPromise(position, firstDelay);\n    firstDelay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","res","rej","shouldResolve","Math","random","setTimeout","position","delay","then","Notify","success","catch","failure","form","document","querySelector","addEventListener","e","preventDefault","firstDelay","currentTarget","valueAsNumber","delayStep","step","promisesAmount","amount"],"version":3,"file":"03-promises.db6f83b8.js.map"}